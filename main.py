from fastapi import FastAPI
from routes import ai, user, auth
from fastapi.responses import HTMLResponse

# from fastapi.templating import Jinja2Templates

# templates = Jinja2Templates(directory="templates")

app = FastAPI()

app.include_router(user.router)
app.include_router(ai.router)
app.include_router(auth.router)


@app.get('/', tags=["About"])
def main():
    return {
        "Direct To API's": "http://13.232.246.216:8000/docs",
        "This Data is Static": "ðŸ˜ŠðŸ˜ŠðŸ˜Š",
        "projectTitle": "AI Query System with FastAPI, Swagger, and DynamoDB",
        "projectDescription": "This is a small-scale backend project built using FastAPI, aimed at creating a structured and scalable API system with full Swagger (OpenAPI) documentation for seamless testing and integration. The goal is to provide a backend service where users can register, log in, and interact with an AI to query information about various products categorized under different domains.",
        "features": [
            {
                "title": "User Registration & Login APIs",
                "description": "Users can securely register and log in using their credentials. Authentication tokens (e.g., JWT) will be implemented for protected routes."
            },
            {
                "title": "AI Registration API",
                "description": "A special route to register and manage AI instances or models available in the system."
            },
            {
                "title": "User Query System",
                "description": "Registered users can query the system by selecting a category and asking a product-related question. The request is handled by the AI module, which returns an intelligent response."
            },
            {
                "title": "Category & Product APIs",
                "description": "APIs to list, add, and manage product categories, ensuring users can easily browse and find relevant items."
            },
            {
                "title": "DynamoDB Integration",
                "description": "All user data, queries, product details, and AI interactions are stored in Amazon DynamoDB, a fast and scalable NoSQL database."
            },
            {
                "title": "Swagger UI",
                "description": "All APIs are documented and testable through the automatically generated Swagger UI at /docs, allowing developers to easily understand and test endpoints during development."
            }
        ],
        "techStack": {
            "backendFramework": "FastAPI",
            "database": "AWS DynamoDB",
            "documentation": "Swagger/OpenAPI (auto-generated by FastAPI)"
        }
    }
